[custom]
; 订阅信息（已集成您的专属地址）
url = https://tfd.wilhelm.us.kg/uiriamu?clash=1  # 关键参数补充
interval = 86400  
udp = true  
tfo = true  

; 协议预处理（必须保留）
parsers = |
  - reg: ^.*$
    code: |
      module.exports.parse = (raw, { yaml }) => {
        const obj = yaml.parse(raw)
        
        // 协议修复处理器
        const protocolFixer = (proxy) => {
          // VMESS处理
          if (proxy.type === 'vmess') {
            proxy.udp = true  // 强制开启UDP
            if (proxy.network === 'ws' && !proxy['ws-opts']) {
              proxy['ws-opts'] = { 
                path: proxy.path || "/", 
                headers: { Host: proxy.host || proxy.server }
              }
            }
          }

          // VLESS处理（需Clash.Meta支持）
          if (proxy.type === 'vless') {
            proxy.udp = true
            // 关键字段校验
            if (!proxy.uuid) throw new Error("VLESS节点缺少uuid")
            
            // 传输层优化
            if (proxy.network === 'ws') {
              proxy['ws-opts'] = proxy['ws-opts'] || {
                path: proxy.path || "/",
                headers: { Host: proxy.sni || proxy.server }
              }
            }
            if (proxy.network === 'grpc') {
              proxy['grpc-opts'] = { 
                grpc_service_name: proxy['grpc-opts']?.grpc_service_name || "grpc" 
              }
            }
            
            // 安全增强
            proxy.servername = proxy.servername || proxy.server
            proxy.tls = proxy.tls !== false // 强制开启TLS
          }

          // Trojan处理
          if (proxy.type === 'trojan') {
            proxy.sni = proxy.sni || proxy.server
            if (!proxy.password) throw new Error("Trojan节点缺少password")
          }
        }

        obj.proxies?.forEach(protocolFixer)
        return yaml.stringify(obj)
      }

; ==== 智能规则集 ====
ruleset=DIRECT,https://cdn.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/LocalAreaNetwork.list
ruleset=REJECT,https://cdn.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/BanAD.list
ruleset=DIRECT,https://cdn.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/GoogleCN.list
ruleset=PROXY,https://cdn.jsdelivr.net/gh/ACL4SSR/ACL4SSR@master/Clash/ProxyLite.list
ruleset=DIRECT,GEOIP,CN
ruleset=FINAL,FINAL

; ==== 代理组优化 ====
custom_proxy_group=全球节点`select`(香港|美国|日本|SG|TW|US|JP|KR).*  
custom_proxy_group=智能选择`url-test`全球节点`http://www.gstatic.com/generate_204`300,5000
custom_proxy_group=备用切换`fallback`全球节点`http://www.qualcomm.cn/generate_204`300,5000

enable_rule_generator=false
overwrite_original_rules=true
